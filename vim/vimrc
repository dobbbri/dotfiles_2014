"========================================================================="
"                                                                         "
"      /$$$$$$  /$$       /$$$$$$$            /$$                 /$$     "
"     /$$__  $$| $$      | $$__  $$          | $$                |__/     "
"    | $$  \__/| $$      | $$  \ $$  /$$$$$$ | $$$$$$$   /$$$$$$  /$$     "
"    |  $$$$$$ | $$      | $$  | $$ /$$__  $$| $$__  $$ /$$__  $$| $$     "
"     \____  $$| $$      | $$  | $$| $$  \ $$| $$  \ $$| $$  \__/| $$     "
"     /$$  \ $$| $$      | $$  | $$| $$  | $$| $$  | $$| $$      | $$     "
"    |  $$$$$$/| $$$$$$$$| $$$$$$$/|  $$$$$$/| $$$$$$$/| $$      | $$     "
"     \______/ |________/|_______/  \______/ |_______/ |__/      |__/     "
"                                                                         "
"====================================================== Sergio Luiz Dobri "

" VUNDLE MANAGER: ==============================================================
" required!
set nocompatible               " be iMproved
filetype off                   " required!
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'
syntax on
filetype on
filetype plugin on
filetype plugin indent on       " required!


" GUI SETTINGS: ================================================================
set background=dark
set t_Co=256                    " Allow the use of 256 colors in the terminal

if has("gui_running")
  colorscheme base16-monokai
  set fuoptions=maxvert,maxhorz
  set fullscreen
else
  colorscheme vividchalk
endif

set guifont=Anonymous\ Pro\ for\ Powerline:h21
"set guifont=monofur\ for\ Powerline:h21


" TRAILING SPACES: =============================================================
exec "set listchars=tab:\uBB\uBB,trail:\uB7,nbsp:~"
set list


" LEADER KEY: ==================================================================
let mapleader=","
let maplocalleader = ","


" DISABLE BELL: ================================================================
autocmd! GUIEnter * set vb t_vb=
set noerrorbells
set novisualbell
set t_vb=


" BUFFERS: =====================================================================
" Navegador para os buffers abertos
set autowrite                   " Save buffer automatically when changing files
set hidden                      " Allow buffer switching without saving
set autoread                    " reload buffer when external changes detected
set autowriteall

" Mouse: =======================================================================
set mouse=a                     " Automatically enable mouse usage
set mousehide                   " Hide the mouse cursor while typing


" ENCODING: ====================================================================
set fileencoding=utf-8
set encoding=utf-8
scriptencoding utf-8


" SPELL: =======================================================================
set nospell
set spelllang=pt,en
set spellsuggest=10
set spellfile=~/.vim/spell/spellfile.add
set complete+=kspell            " press CTRL-N or CTRL-P in insert-mode to complete the word we're typing!
" Como Usar:
"
" ]s vai para a próxima palavra;
" [s vai para a palavra anterior;
" z= mostra a lista de sugestões para a palavra;
" zg adiciona a palavra sob o cursor no dicionário, assim ela não será mais marcada como errada;
" zug desfaz a última palavra adicionada;
" zw remove a palavra sob o cursor do dicionário, assim ela será marcada como errada;
" zuw desfaz a última palavra removida.

" set nospell                     " no Spell checking on


" SEARCH: ======================================================================
set incsearch                   " Find as you type search
set hlsearch                    " Highlight search terms
set ignorecase                  " Case insensitive search
set smartcase                   " Case sensitive when uc present
set showmatch                   " Show matching brackets/parenthesis
set gdefault                    " subtitui o g no substitruir


" MENU AUTOCOMPLETE: ===========================================================
set wildmenu                    " Show list instead of just completing
set wildmode=full               " Command <Tab> completion, list matches
set whichwrap=b,s,h,l,<,>,[,]   " Backspace and cursor keys wrap too
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,.DS_Store   " Linux/MacOSX
set complete=.,t

" GUI: =========================================================================
set guioptions=                  " Remove tudo, toolbar, menu etc..
set laststatus=2                " always show status line
set antialias
set winminheight=0              " Windows can be 0 line high
set linespace=0                 " No extra spaces between rows
set nonumber                    " Line numbers off:

set scrolljump=5                " Lines to scroll when cursor leaves screen
set scrolloff=3                 " Minimum lines to keep above and below cursor
set viewoptions=folds,options,cursor,unix,slash " Better Unix/Windows compatib.
set title                       " change the terminal's title
set cursorline                  " hi cursor line
set icon                        " change the title to include the current file
set showtabline=2               " 1=exibe qdo tiver +d 1 tab, 2=sempre exibe
set showcmd                     " show command in botton rigth of the screen
set noshowmode
set modeline                    " " always show file name
set fillchars+=vert:│
set nolazyredraw
set cmdheight=1

" VAROUS: ======================================================================
set shortmess+=filmnrxoOtT      " Abbrev. of messages (avoids 'hit enter')
set virtualedit=onemore         " Allow for cursor beyond last character
set history=50                  " Store a ton of history (default is 20)
set backspace=indent,eol,start
set clipboard=autoselect
set confirm                     " If unsaved changes, ask if you want to save
set timeoutlen=500              " reduce a slag after type leader key + command
set nowrap                      " Do not wrap long lines
set nofoldenable                " No Auto fold code
set list listchars=tab:→\ ,trail:·  " Show tabs and trailing spaceis
set whichwrap+=<,>,h,l,[,]      " Automatically wrap left and right
set scrolloff=3
" Speed up vim
set nolazyredraw
set synmaxcol=250
set viminfo=
set ttimeoutlen=50
" No scratch
set completeopt-=preview


" IDENT: =======================================================================
set autoindent                  " Indent at the same level of the previous line
set nojoinspaces                " Prevents inserting twospaces afterpunctuation
set splitright                  " Puts new vsplit windows to the right
set splitbelow                  " Puts new split windows to the bottom
set smartindent
set shellslash


" TABS: ========================================================================
set shiftwidth=4                " Use indents of 4 spaces
set tabpagemax=15               " Only show 15 tabs
set tabstop=4                   " An indentation every four columns
set softtabstop=4               " Let backspace delete indent
set expandtab                   " Tabs are spaces, not tabs
set shiftround                  "round > and < to multiples of shiftwidth


" SESSION SETTINGS: ============================================================
set sessionoptions=resize,winpos,winsize,buffers,tabpages,folds,curdir,help


" SWAP E BACKUP: ===============================================================
set noswapfile                  " Stop vim from creating automatic backups
set nobackup                    " Stop backup
set nowb


" CURSOR: ======================================================================
" Alterar o formato do cursor
set guicursor=a:block

set guicursor+=o:hor10-Cursor
set guicursor+=n:Cursor
set guicursor+=i-ci-sm:InsertCursor-hor10
set guicursor+=r-cr:ReplaceCursor-hor10
set guicursor+=c:CommandCursor-hor10
set guicursor+=v-ve:VisualCursor

set guicursor+=a:blinkon0

" Alterar a cor do cursor
highlight Cursor        ctermfg=22  guifg=#005f00 ctermbg=148 guibg=#afdf00
highlight InsertCursor  ctermfg=117 guifg=#87dfff ctermbg=231 guibg=#ffffff
highlight VisualCursor  ctermfg=88  guifg=#870000 ctermbg=125 guibg=#ff8700
highlight ReplaceCursor ctermfg=231 guifg=#ffffff ctermbg=160 guibg=#df0000
highlight CommandCursor ctermfg=16  guifg=#000000 ctermbg=231 guibg=#ffffff


" REMOVE DELAY: ================================================================
" The issue is that Powerline causes a delay when leaving Insert mode, but this
" can be  fixed by changing the InsertEnter timeoutlen setting to 0:
if ! has('gui_running')
  set ttimeoutlen=10
  augroup FastEscape
    autocmd!
    au InsertEnter * set timeoutlen=0
    au InsertLeave * set timeoutlen=1000
  augroup END
endif


" HTML5: =======================================================================
Bundle 'othree/html5.vim'
Bundle 'amirh/HTML-AutoCloseTag'


" CSS3: ========================================================================
Bundle 'hail2u/vim-css3-syntax'


" AUTOCLOSE: ===================================================================
Bundle 'Townk/vim-autoclose'


" GIT: =========================================================================
Bundle 'tpope/vim-fugitive'
nnoremap <Leader>gs :Gstatus<CR>
nnoremap <Leader>gr :Gremove<CR>
nnoremap <Leader>gl :Glog<CR>
nnoremap <Leader>gb :Gblame<CR>
nnoremap <Leader>gm :Gmove
nnoremap <Leader>gp :Ggrep
nnoremap <Leader>gR :Gread<CR>
nnoremap <Leader>gg :Git
nnoremap <Leader>gd :Gdiff<CR>
" Mostrando adições, remoções e alterações do Git
Bundle 'airblade/vim-gitgutter'


" HEX HIGHLIGHT: ===============================================================
Bundle 'vim-scripts/hexHighlight.vim'
" <Leader><F2> to ativate and desativate


" VIM TABLE MODE: ==============================================================
Bundle 'dhruvasagar/vim-table-mode'


" VDEGUG: ======================================================================
" Php Debug
Bundle 'joonty/vdebug'


" UTL: =========================================================================
" Univeral Text Linking - Execute URLs, footnotes, open emails, organize ideas
Bundle 'vim-scripts/utl.vim'


" EASY MOTIONS: ================================================================
Bundle 'Lokaltog/vim-easymotion'


" PHPCOMPLETE: =================================================================
Bundle 'shawncplus/phpcomplete.vim'
Bundle 'arnaud-lb/vim-php-namespace'
Bundle 'StanAngeloff/php.vim'


" PHP GETTER SETTER: ===========================================================
Bundle 'docteurklein/php-getter-setter.vim'
" Commands:
imap <Leader>gg :InsertGetterOnly<CR>
imap <Leader>ss :InsertSetterOnly
imap <Leader>ii :InsertBothGetterSetter


" PHP: =========================================================================
" Bundle 'donnut/vim-php54-syntax'
Bundle 'vim-scripts/php.vim-for-php5'
let g:php_sql_query=1             " to highlight SQL syntax in strings
let g:php_htmlInStrings=1         " to highlight HTML in string
let g:php_noShortTags = 1         " to disable short tags
let g:php_folding = 0
let g:php_strict_blocks = 0
let g:php_short_tags = 1
let g:php_show_semicolon = 1
let g:php_smart_semicolon = 1


" NERDCOMMENTER: ===============================================================
Bundle 'scrooloose/nerdcommenter'
map <leader>cc <plug>NERDCommenterInvert


" IDENTLINE: ===================================================================
" display the indention levels with thin vertical lines
Bundle 'Yggdroot/indentLine'
let g:indentLine_color_term = 239
let g:indentLine_color_gui='#778899'
let g:indentLine_char='│'
let g:indentLine_indentLevel=7


" VIM PHPQA: ===================================================================
Bundle 'joonty/vim-phpqa.git'
" <Leader>qa  - Show/hide code sniffer and mess detector violations
" <Leader>qc  - Show/hide code coverage markers
let g:phpqa_messdetector_autorun = 0
let g:phpqa_codesniffer_autorun = 1
let g:phpqa_open_loc = 1
let g:phpqa_codesniffer_args = "--standard=PSR2"
let g:phpqa_php_cmd='/Applications/XAMPP/xamppfiles/bin/php'
let g:phpqa_codesniffer_cmd='/Applications/XAMPP/xamppfiles/bin/phpcs'
let g:phpqa_messdetector_cmd='/Applications/XAMPP/xamppfiles/bin/phpmd'


" AUTO PAIRS: ==================================================================
Bundle 'jiangmiao/auto-pairs'
let g:AutoPairsFlyMode = 1


" EMMET: =======================================================================
Bundle 'mattn/emmet-vim'
let g:user_emmet_mode='a'    "enable all function in all mode.
let g:user_emmet_expandabbr_key='<c-e>'
let g:user_emmet_complete_tag=1
let g:user_emmet_next_key='<c-n>'
let g:user_emmet_prev_key='<c-p>'


" MARKDOWN: ====================================================================
Bundle 'plasticboy/vim-markdown'
let g:vim_markdown_folding_disabled=1


" CALENDAR: ====================================================================
" Exibe 3 calendarios contendo o mes anterior, mes atual e o proximo mes
Bundle 'mattn/calendar-vim'
let g:calendar_navi_label = '<Ant.,Hoje,Pro.>'
let g:calendar_mruler = 'Jan,Fev,Mar,Abr,Mai,Jun,Jul,Ago,Set,Out,Nov,Dez'
let g:calendar_wruler = 'Do Se Te Qa Qi Se Sa'
abbreviate cal :Calendar<CR>


" FUNCTIONS: ==================================================================
" Remove empty line at the end of page
function! <SID>TrimEndLines()
  let save_cursor = getpos(".")
  :silent! %s#\($\n\s*\)\+\%$##
  call setpos('.', save_cursor)
endfunction

" Remove trailing spaces
function! <SID>StripTrailingWhitespaces()
  " Preparation: save last search, and cursor position.
  let _s=@/
  let l = line(".")
  let c = col(".")
  " Do the business:
  %s/\s\+$//e
  " Clean up: restore previous search history, and cursor position
  let @/=_s
  call cursor(l, c)
endfunction

function! BrowseDoc()
  if b:current_syntax == "php"
    ! open "http://ch2.php.net/manual-lookup.php?pattern=<cword>"
  else
    return
  endif
endfunction

function! RunJScript1()
  exec "! node %"
endfunction

function! Myspell()
   let Myspl=&spell
   if &spell
      let Myspl="nospell"
   else
      let Myspl="spell"
   endif
   exe "setlocal " . Myspl
endfunction


" AUTOCMD: =====================================================================
" Auto remove when saving
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()
autocmd BufWritePre * :call <SID>TrimEndLines()
" autoformat
autocmd BufRead,BufWritePre *.html normal mzgg=G`z
autocmd BufRead,BufWritePre *.css normal mzgg=G`z
autocmd BufRead,BufWritePre *.js normal mzgg=G`z
" tab
autocmd FileType html setlocal tabstop=2 shiftwidth=2 softtabstop=2
autocmd FileType css  setlocal tabstop=2 shiftwidth=2 softtabstop=2
autocmd FileType js   setlocal tabstop=2 shiftwidth=2 softtabstop=2
autocmd FileType vim  setlocal tabstop=2 shiftwidth=2 softtabstop=2
" Text width
autocmd FileType php  setlocal textwidth=250
autocmd FileType vim  setlocal textwidth=250
"" spell
"autocmd FileType html setlocal spell
"autocmd FileType php  setlocal spell
"autocmd FileType css  setlocal nospell
"autocmd FileType vim  setlocal nospell
" Color column
autocmd FileType php :call matchadd('ColorColumn', '\%81v.*', 250)
autocmd FileType vim :call matchadd('ColorColumn', '\%121v.*', 250)
" Languages
autocmd FileType php setlocal omnifunc=phpcomplete#CompletePHP
autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
autocmd FileType vim set omnifunc=syntaxcomplete#Complete
" Markdown
autocmd BufNewFile,BufRead *.markdown,*.mdown,*.mkd,*.mkdn,*.md  set filetype=markdown
" no terminal digite: export MYVIMRC="/User/sldobri/.dotfiles/vim/vimrc"
autocmd bufwritepost vimrc :so %
" java compile files
autocmd filetype java nnoremap <Leader>c :w <CR>:!javac % && java %:r<CR>
" Commit
autocmd filetype gitcommit nnoremap <buffer> c :Gcommit<CR>


" DISTRACTION FREE: ============================================================
" Distraction-free writing in Vim
Bundle 'junegunn/goyo.vim'
let g:goyo_width=84
let g:goyo_margin_top=1
let g:goyo_margin_bottom=1
let g:goyo_linenr=0

function! g:goyo_before()
  if has('gui_running')
    set fullscreen
    set linespace=4
    set nonumber
  endif
endfunction

function! g:goyo_after()
  if has('gui_running')
    set nofullscreen
    set linespace=0
    set number
endif
endfunction
let g:goyo_callbacks = [function('g:goyo_before'), function('g:goyo_after')]
" nnoremap <F12> :Goyo<CR>


" SURROUND: ===================================================================
Bundle 'tpope/vim-surround'


" NAVIGATE: ====================================================================
" entre Buffers
nnoremap <silent> <S-Right> :bn<CR>
nnoremap <silent> <S-Left> :bp<CR>
nnoremap <silent> <C-x> :q<CR>
" Entre Janlas
nmap <C-h> <C-w>h
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-l> <C-w>l
" Entre tabs
"nnoremap <silent> <S-Right> :tabn<CR>
"nnoremap <silent> <S-Left> :tabp<CR>
"nnoremap <silent> <C-x> :tabclose<CR>
imap jj <Esc>
nmap <space> :


" BUBLE TEXT: ==================================================================
"http://vimcasts.org/episodes/bubbling-text/
"Bubble single lines
nmap <C-Up> ddkP
nmap <C-Down> ddp
"Bubble multiple lines
vmap <C-Up> xkP`[V`]
vmap <C-Down> xp`[V`]


" FAST SAVE: ===================================================================
nnoremap <leader>w :w!<CR>


" FUNCTIONS KEY: ===============================================================
" menu de selecao de arwuivos
nnoremap <silent> <F2> :NERDTreeTabsToggle<CR>
" execute php-cs-fixer
nnoremap <silent> <F4> :!php-cs-fixer fix % --level=all<CR>
" execute php
nnoremap <silent> <F5> :! php %<CR>
"manual do php
map <F6> :call BrowseDoc()<CR>
" alinhar codigo
nnoremap <silent> <F7> mzgg=G`z<CR>
" execute javascript
map <silent> <F8> :call RunJScript1() <CR>
" corretor Ortográfico
map <silent><F9> :call Myspell()<CR>
" ativate Gundo
nnoremap <F11> :GundoToggle<CR>
" remover distracoes
nnoremap <silent> <F12> :Goyo<CR>


" SHORTCUTS: ===================================================================
" Show Battery Usage:
abbreviate batt :exec "!pmset -g batt"
" Lorem Ipsum:
iabbrev lorem Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
iabbrev llorem Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
" Abre O Buffer No Safari:
abbreviate saf :! open -a safari.app %:p<CR>
" Start Stop Apache:
abbreviate apup :!sudo /Applications/XAMPP/xamppfiles/xampp startapache<CR>
abbreviate apdown :!sudo /Applications/XAMPP/xamppfiles/xampp stopapache<CR>i
" Start Stop Mysql:
abbreviate myup :!sudo /Applications/XAMPP/xamppfiles/share/mysql/mysql.server start<CR>
abbreviate mydown :!sudo /Applications/XAMPP/xamppfiles/share/mysql/mysql.server stop<CR>


" PHP DOCUMENTOR: ==============================================================
Bundle 'tobyS/pdv'
let g:pdv_template_dir = "~/.dotfiles/vim/bundle/pdv/templates_snip"
nnoremap <buffer> <C-p> :call pdv#DocumentWithSnip()<CR>
imap <C-o> :set paste<CR>:exe PhpDoc()<CR>:set nopaste<CR>i


" VISIONAL: ====================================================================
Bundle 'justindomingue/visional'
let g:visionalhl='ctermbg=black ctermfg=yellow guifg=yellow guibg=black ctermfg=yellow gui=bold'


" VIM VINEGAR: =================================================================
Bundle 'tpope/vim-vinegar'


" LIGHTLINE: ===================================================================
Bundle 'itchyny/lightline.vim'
let g:lightline = {
      \ 'separator': { 'left': '', 'right': '' },
      \ 'subseparator': { 'left': '', 'right': '' }
      \ }

" RENAME: ======================================================================
Bundle 'wojtekmach/vim-rename'
" Usage:
" :Rename[!] {newname}


" MULTIPLE CURSORS: ============================================================
Bundle 'terryma/vim-multiple-cursors'
let g:multi_cursor_use_default_mapping=0
" Default mapping
let g:multi_cursor_next_key='<C-n>'
let g:multi_cursor_prev_key='<C-p>'
let g:multi_cursor_skip_key='<C-x>'
let g:multi_cursor_quit_key='<Esc>'
" Default highlighting (see help :highlight and help :highlight-link)
highlight multiple_cursors_cursor term=reverse cterm=reverse gui=reverse
highlight link multiple_cursors_visual Visual


" GUNDO: =======================================================================
Bundle 'sjl/gundo.vim'
let g:gundo_width = 60
let g:gundo_preview_height = 40
let g:gundo_right = 1
set undolevels=400
set undodir=~/.dotfiles/vim/undodir


" NEOCOMPLETE: =================================================================
Bundle 'Shougo/neocomplete.vim'
let g:neocomplete#enable_at_startup = 1
let g:neocomplete#enable_smart_case = 1
let g:neocomplete#sources#syntax#min_keyword_length = 2
" Disable AutoComplPop.
let g:acp_enableAtStartup = 0
" <TAB>: completion.
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
" <C-h>, <BS>: close popup and delete backword char.
inoremap <expr><C-h> neocomplete#smart_close_popup()."\<C-h>"
inoremap <expr><BS> neocomplete#smart_close_popup()."\<C-h>"
inoremap <expr><C-y>  neocomplete#close_popup()
inoremap <expr><C-e>  neocomplete#cancel_popup()

" automatically open and close the popup menu / preview window
au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif


" VIMSHELL: ====================================================================
Bundle 'Shougo/vimshell.vim'
Bundle 'Shougo/vimproc'


" NERDTREE: ====================================================================
" Allows to explore filesystem
Bundle 'scrooloose/nerdtree'
Bundle 'jistr/vim-nerdtree-tabs'
let g:NERDTreeHighlightCursorline=1     " Destaca a linha atual
let g:NERDTreeHijackNetrw=1
let g:NERDTreeMinimalUI=1
let g:NERDTreeIgnore=['\.pyc', '\~$', '\.swo$', '\.swp$', '\.git', '\.hg', '\.svn', '\.bzr', '.DS_Store', 'Icon']
let g:NERDTreeWinPos = "right"
let g:NERDTreeHijackNetrw=1
let g:NERDTreeWinSize=30
let g:NERDTreeAutoCenter = 1
" Usage:
"o.......Open files, directories and bookmarks
"go......Open selected file, but leave cursor in the NERDTree
"t.......Open selected node/bookmark in a new tab
"T.......Same as 't' but keep the focus on the current tab
"i.......Open selected file in a split window
"gi......Same as i, but leave the cursor on the NERDTree
"s.......Open selected file in a new vsplit
"gs......Same as s, but leave the cursor on the NERDTree
"O.......Recursively open the selected directory
"x.......Close the current nodes parent
"X.......Recursively close all children of the current node
"e.......Edit the current dir

"<CR>...............same as |NERDTree-o|.
"double-click.......same as the |NERDTree-o| map.
"middle-click.......same as |NERDTree-i| for files, same as
                   "|NERDTree-e| for dirs.

"D.......Delete the current bookmark

"P.......Jump to the root node
"p.......Jump to current nodes parent
"K.......Jump up inside directories at the current tree depth
"J.......Jump down inside directories at the current tree depth
"<C-J>...Jump down to the next sibling of the current directory
"<C-K>...Jump up to the previous sibling of the current directory

"C.......Change the tree root to the selected dir
"u.......Move the tree root up one directory
"U.......Same as 'u' except the old root node is left open
"r.......Recursively refresh the current directory
"R.......Recursively refresh the current root
"m.......Display the NERD tree menu
"cd......Change the CWD to the dir of the selected node
"CD......Change tree root to the CWD

"I.......Toggle whether hidden files displayed
"f.......Toggle whether the file filters are used
"F.......Toggle whether files are displayed
"B.......Toggle whether the bookmark table is displayed

"q.......Close the NERDTree window
"A.......Zoom (maximize/minimize) the NERDTree window
"?.......Toggle the display of the quick help


" TAGBAR: ======================================================================
Bundle 'majutsushi/tagbar'
let g:tagbar_singleclick=1
let g:tagbar_autoshowtag=1
let g:tagbar_iconchars=['▸', '▾']
let g:tagbar_width=30
let g:tagbar_compact=1
let g:tagbar_ctags_bin='/usr/local/Cellar/ctags/5.8/bin/ctags'

nmap <Leader>t :!/usr/local/Cellar/ctags/5.8/bin/ctags --totals -R ./<CR>
nmap <F3> :TagbarToggle<CR>


" SILVER SEARCH: ===============================================================
Bundle 'rking/ag.vim'
let g:agprg="/usr/local/Cellar/the_silver_searcher/0.19.1/bin/ag  --column --smart-case"
let g:aghighlight=1
let g:agformat="%f:%l:%m"
"Keyboard Shortcuts
"In the quickfix window, you can use:
"e    to open file and close the quickfix window
"o    to open (same as enter)
"go   to preview file (open but maintain focus on ag.vim results)
"t    to open in new tab
"T    to open in new tab silently
"h    to open in horizontal split
"H    to open in horizontal split silently
"v    to open in vertical split
"gv   to open in vertical split silently
"q    to close the quickfix window


" AUTO SAVE:if expand("%") == ""|browse confirm w|else|confirm w|endif
" : ===================================================================
"au! CursorHoldI,CursorHold,BufLeave <buffer> silent! :update
Bundle 'https://github.com/907th/vim-auto-save'
let g:auto_save = 1  " enable AutoSave on Vim startup
let g:auto_save_no_updatetime = 1  " do not change the 'updatetime' option


" EXECUTA NO SERVIDOR: =================================================
function! Exec_host()
    let b:file = bufname("%")
    let b:host = substitute(b:file, "Copy", "http://localhost", "")
    exec "! open -a safari.app " b:host
endfunction

nmap <silent><C-h>  :call Exec_host()<CR>
