
 "========================================================================="
 "                                                                         "
 "      /$$$$$$  /$$       /$$$$$$$            /$$                 /$$     "
 "     /$$__  $$| $$      | $$__  $$          | $$                |__/     "
 "    | $$  \__/| $$      | $$  \ $$  /$$$$$$ | $$$$$$$   /$$$$$$  /$$     "
 "    |  $$$$$$ | $$      | $$  | $$ /$$__  $$| $$__  $$ /$$__  $$| $$     "
 "     \____  $$| $$      | $$  | $$| $$  \ $$| $$  \ $$| $$  \__/| $$     "
 "     /$$  \ $$| $$      | $$  | $$| $$  | $$| $$  | $$| $$      | $$     "
 "    |  $$$$$$/| $$$$$$$$| $$$$$$$/|  $$$$$$/| $$$$$$$/| $$      | $$     "
 "     \______/ |________/|_______/  \______/ |_______/ |__/      |__/     "
 "                                                                         "
 "====================================================== Sergio Luiz Dobri "


set nocompatible               " be iMproved
filetype off                   " required!
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()


" Let Vundle Manage Vundle: ====================================================
" required!
Bundle 'gmarik/vundle'


" Config: ======================================================================
filetype plugin indent on       " required!
syntax on                       " Syntax highlighting


" Colorscheme: =================================================================
set background=dark
set t_Co=256                    " Allow the use of 256 colors in the terminal
colorscheme molokai
" colorscheme Iceberg

if has('gui_running')
    let g:rehash256=0
else
    let g:rehash256=1
endif

" Trailing Space: ==============================================================
" Remove trailing spaces when saving a file
exec "set listchars=tab:\uBB\uBB,trail:\uB7,nbsp:~"
set list


" Buffers: =====================================================================
" Navegador para os buffers abertos
set autowrite                   " Save buffer automatically when changing files
set hidden                      " Allow buffer switching without saving
set autoread                    " reload buffer when external changes detected


" Mouse: =======================================================================
set mouse=a                     " Automatically enable mouse usage
set mousehide                   " Hide the mouse cursor while typing


" Encoding: ====================================================================
set fileencoding=utf-8
set encoding=utf-8
scriptencoding utf-8


" Pesquisa: ====================================================================
set incsearch                   " Find as you type search
set hlsearch                    " Highlight search terms
set ignorecase                  " Case insensitive search
set smartcase                   " Case sensitive when uc present
set showmatch                   " Show matching brackets/parenthesis
set gdefault                    " subtitui o g no substitruir


" Menu Autocompletar: ==========================================================
set wildmenu                    " Show list instead of just completing
set wildmode=full               " Command <Tab> completion, list matches
set whichwrap=b,s,h,l,<,>,[,]   " Backspace and cursor keys wrap too
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.DS_Store   " Linux/MacOSX


" Gui: =========================================================================
set guioptions=aAc              " aA = autoselect  c = console dialogs
set guioptions-=Beb
set guioptions-=TM              " Remove the toolbar e menju
set guioptions-=LrlR             " Remove scrollbars
set laststatus=2                " always show status line
set guifont=monofur\ for\ Powerline:h20
" set guifont=Source\ Code\ Pro\ for\ Powerline:h17
" set guifont=Envy Code R\ for\ Powerline:h18
set winminheight=0              " Windows can be 0 line high
set linespace=0                 " No extra spaces between rows
set number                      " Line numbers on:
" set relativenumber
set scrolljump=5                " Lines to scroll when cursor leaves screen
set scrolloff=3                 " Minimum lines to keep above and below cursor
set viewoptions=folds,options,cursor,unix,slash " Better Unix/Windows compatib.
set title                       " change the terminal's title
set cursorline                  " hi cursor line
set icon                        " change the title to include the current file
set showtabline=1               " 1=exibe qdo tiver +d 1 tab, 2=sempre exibe
"set lines=45
"set columns=85
set showcmd                     " show command in botton rigth of the screen
set noshowmode
set nocursorcolumn
set nocursorline
set modeline                    " " always show file name
set cursorline
set fillchars+=vert:│
set nolazyredraw


" Diversos: ====================================================================
set shortmess+=filmnrxoOtT      " Abbrev. of messages (avoids 'hit enter')
set virtualedit=onemore         " Allow for cursor beyond last character
set history=50                  " Store a ton of history (default is 20)
set backspace=indent,eol,start
set clipboard=autoselect
set confirm                     " If unsaved changes, ask if you want to save
set timeoutlen=500              " reduce a slag after type leader key + command
set nospell                     " no Spell checking on
set nowrap                      " Do not wrap long lines
set nofoldenable                " No Auto fold code
set noerrorbells                " don't beep
set list listchars=tab:→\ ,trail:·  " Show tabs and trailing spaceis
set whichwrap+=<,>,h,l,[,]      " Automatically wrap left and right
set scrolloff=3
" Speed up vim
set nolazyredraw
set synmaxcol=250
set viminfo=
set ttimeoutlen=50


" Identacao: ===================================================================
set autoindent                  " Indent at the same level of the previous line
set nojoinspaces                " Prevents inserting twospaces afterpunctuation
set splitright                  " Puts new vsplit windows to the right
set splitbelow                  " Puts new split windows to the bottom
set smartindent


" Tabulacao: ===================================================================
set shiftwidth=4                " Use indents of 4 spaces
set tabpagemax=15               " Only show 15 tabs
set tabstop=4                   " An indentation every four columns
set softtabstop=4               " Let backspace delete indent
set expandtab                   " Tabs are spaces, not tabs
set shiftround                  "round > and < to multiples of shiftwidth


" Session Settings: ============================================================
set sessionoptions=resize,winpos,winsize,buffers,tabpages,folds,curdir,help


" Swap E Backup: ===============================================================
set noswapfile                  " Stop vim from creating automatic backups
set nobackup                    " Stop backup
set nowb


" Cursor: ======================================================================
" Alterar o formato do cursor
set guicursor=a:block

set guicursor+=o:hor10-Cursor
set guicursor+=n:Cursor
set guicursor+=i-ci-sm:InsertCursor-hor10
set guicursor+=r-cr:ReplaceCursor-hor10
set guicursor+=c:CommandCursor-hor10
set guicursor+=v-ve:VisualCursor

set guicursor+=a:blinkon0

" Alterar a cor do cursor
highlight Cursor        ctermfg=15 guifg=#000000 ctermbg=37  guibg=#E6D874
highlight InsertCursor  ctermfg=15 guifg=#000000 ctermbg=37  guibg=#66D9EF
highlight VisualCursor  ctermfg=15 guifg=#000000 ctermbg=125 guibg=#F7962B
highlight ReplaceCursor ctermfg=15 guifg=#000000 ctermbg=65  guibg=#EF5939
highlight CommandCursor ctermfg=15 guifg=#000000 ctermbg=166 guibg=#465457


" Nerdcommenter: ===============================================================
Bundle 'scrooloose/nerdcommenter'
" [count]<leader>ci - Toggles the comment state of the selected line(s) individually.
" [count]<leader>cy- Same as cc except that the commented line(s) are yanked first.
" <leader>c$ - Comments the current line from the cursor to the end of line.
" <leader>cA - Adds comment delimiters to the end of line and goes into insert mode between them

" HTML5: =======================================================================
Bundle 'othree/html5.vim'
Bundle 'amirh/HTML-AutoCloseTag'


" CSS3: ========================================================================
Bundle 'hail2u/vim-css3-syntax'


" Autoclose: ===================================================================
Bundle 'Townk/vim-autoclose'


" Git: =========================================================================
Bundle 'tpope/vim-fugitive'
" Mostrando adições, remoções e alterações do Git
Bundle 'airblade/vim-gitgutter'


" Snipmate: ====================================================================
Bundle "MarcWeber/vim-addon-mw-utils"
Bundle "tomtom/tlib_vim"
Bundle "garbas/vim-snipmate"
Bundle "honza/vim-snippets"


" HexHilight: ==================================================================
Bundle 'vim-scripts/hexHighlight.vim'
" <Leader><F2> to ativate and desativate


" VimTableMode: ===============================================================
Bundle 'dhruvasagar/vim-table-mode'


" VDebug: =====================================================================
" Php Debug
Bundle 'joonty/vdebug'


" Utl: ========================================================================
" Univeral Text Linking - Execute URLs, footnotes, open emails, organize ideas
Bundle 'vim-scripts/utl.vim'


" Easy Motions Yeah: ===========================================================
Bundle 'Lokaltog/vim-easymotion'


" PhpComplete: =================================================================
Bundle 'shawncplus/phpcomplete.vim'
Bundle 'arnaud-lb/vim-php-namespace'
Bundle 'StanAngeloff/php.vim'


" Php: =========================================================================
Bundle 'donnut/vim-php54-syntax'
let g:php_sql_query=1             " to highlight SQL syntax in strings
let g:php_htmlInStrings=1         " to highlight HTML in string
let g:php_noShortTags = 1         " to disable short tags
let g:php_folding = 0
let g:php_strict_blocks = 0
let g:php_short_tags = 1
let g:php_show_semicolon = 1
let g:php_smart_semicolon = 1


" IdentLine: ===================================================================
" display the indention levels with thin vertical lines
Bundle 'Yggdroot/indentLine'
let g:indentLine_color_term = 239
let g:indentLine_color_gui='#778899'
let g:indentLine_char='│'
let g:indentLine_indentLevel=7


" Vim Phpqa: ===================================================================
Bundle 'joonty/vim-phpqa.git'
" <Leader>qa  - Show/hide code sniffer and mess detector violations
" <Leader>qc  - Show/hide code coverage markers
let g:phpqa_messdetector_autorun = 0
let g:phpqa_codesniffer_autorun = 1
let g:phpqa_open_loc = 1
let g:phpqa_codesniffer_args = "--standard=PSR2"
let g:phpqa_php_cmd='/Applications/MAMP/bin/php/php5.4.19/bin/php'
let g:phpqa_codesniffer_cmd='/Applications/MAMP/bin/phpcs'
let g:phpqa_messdetector_cmd='/Applications/MAMP/bin/phpmd'


" Auto Pairs: ==================================================================
Bundle 'jiangmiao/auto-pairs'
let g:AutoPairsFlyMode = 1


" Emmet: =======================================================================
Bundle 'mattn/emmet-vim'
let g:user_emmet_mode='a'    "enable all function in all mode.
let g:user_emmet_expandabbr_key='<c-e>'
let g:user_emmet_complete_tag=1
let g:user_emmet_next_key='<c-n>'
let g:user_emmet_prev_key='<c-p>'


" Neocomplcache: ===============================================================
Bundle 'Shougo/neocomplcache.vim'
let g:neocomplcache_enable_at_startup = 1
let g:neocomplcache_enable_smart_case = 1
let g:neocomplcache_min_syntax_length = 3
let g:neocomplcache_lock_buffer_name_pattern = '\*ku\*'
noremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"


" Neosnippet: ==================================================================
Bundle 'Shougo/neosnippet'
let g:neosnippet#enable_snipmate_compatibility = 1
let g:neosnippet#snippets_directory='~/.vim/bundle/vim-snippets/snippets'
imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
            \ "\<Plug>(neosnippet_expand_or_jump)"
            \: pumvisible() ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
            \ "\<Plug>(neosnippet_expand_or_jump)"
            \: "\<TAB>"



" Markdown: ===================================================================
Bundle 'plasticboy/vim-markdown'
let g:vim_markdown_folding_disabled=1


" Calendar: ===================================================================
" Exibe 3 calendarios contendo o mes anterior, mes atual e o proximo mes
"Bundle 'mattn/calendar-vim'
"let g:calendar_navi_label = '<Ant.,Hoje,Pro.>'
"let g:calendar_mruler = 'Jan,Fev,Mar,Abr,Mai,Jun,Jul,Ago,Set,Out,Nov,Dez'
"let g:calendar_wruler = 'Do Se Te Qa Qi Se Sa'
"nmap <Leader>c :Calendar<CR>


" Functions: ==================================================================
" Remove empty line at the end of page
function! <SID>TrimEndLines()
  let save_cursor = getpos(".")
  :silent! %s#\($\n\s*\)\+\%$##
  call setpos('.', save_cursor)
endfunction

" Remove trailing spaces
function! <SID>StripTrailingWhitespaces()
  " Preparation: save last search, and cursor position.
  let _s=@/
  let l = line(".")
  let c = col(".")
  " Do the business:
  %s/\s\+$//e
  " Clean up: restore previous search history, and cursor position
  let @/=_s
  call cursor(l, c)
endfunction

function! BrowseDoc()
    if b:current_syntax == "php"
        ! open "http://ch2.php.net/manual-lookup.php?pattern=<cword>"
    else
        return
    endif
endfunction


" Autocomandos: ================================================================
" Auto remove when saving
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()
autocmd BufWritePre * :call <SID>TrimEndLines()
" autoformat
autocmd BufRead,BufWritePre *.html normal mzgg=G`z
autocmd BufRead,BufWritePre *.css normal mzgg=G`z
autocmd BufRead,BufWritePre *.js normal mzgg=G`z
" tab
autocmd FileType html setlocal tabstop=2 shiftwidth=2 softtabstop=2
autocmd FileType css setlocal tabstop=2 shiftwidth=2 softtabstop=2
autocmd FileType js setlocal tabstop=2 shiftwidth=2 softtabstop=2
autocmd FileType vim setlocal tabstop=2 shiftwidth=2 softtabstop=2
" Text width
autocmd FileType php setlocal textwidth=250
autocmd FileType vim setlocal textwidth=250
" Color column
autocmd FileType php :call matchadd('ColorColumn', '\%81v.*', 250)
autocmd FileType vim :call matchadd('ColorColumn', '\%121v.*', 250)
" Languages
autocmd FileType php setlocal omnifunc=phpcomplete#CompletePHP
autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
autocmd FileType vim set omnifunc=syntaxcomplete#Complete
" Markdown
autocmd BufNewFile,BufRead *.markdown,*.mdown,*.mkd,*.mkdn,*.md  set filetype=markdown
" no terminal digite: export MYVIMRC="/Users/sldobri/.dotfiles/vim/vimrc"
autocmd bufwritepost vimrc source $MYVIMRC


" FocusMode: ==================================================================
" Distraction-free writing in Vim
Bundle 'junegunn/goyo.vim'
let g:goyo_width=84
let g:goyo_margin_top=1
let g:goyo_margin_bottom=1
let g:goyo_linenr=0

function! g:goyo_before()
  if has('gui_running')
    set fullscreen
    set linespace=4
    set nonumber
  endif
endfunction

function! g:goyo_after()
  if has('gui_running')
    set nofullscreen
    set linespace=0
    set number
  endif
endfunction
let g:goyo_callbacks = [function('g:goyo_before'), function('g:goyo_after')]
" nnoremap <F12> :Goyo<CR>


" Gmail Calendar: =============================================================
Bundle 'itchyny/calendar.vim'
let g:calendar_google_calendar = 1
let g:calendar_google_task = 1
" :Calendar -view=year
" :Calendar -view=year -split=vertical -width=27
" :Calendar -view=year -split=horizontal -position=below -height=12
" :Calendar -view=clock


" Surround: ===================================================================
Bundle 'tpope/vim-surround'


" Airline: ====================================================================
Bundle 'bling/vim-airline'
let g:airline_powerline_fonts = 1
let g:bufferline_echo=1
" tabline
let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#tabline#formatter = 'unique_tail'
let g:airline#extensions#quickfix#quickfix_text = 'Quickfix'


" NerdTree: ====================================================================
" Allows to explore filesystem
Bundle 'scrooloose/nerdtree'
" Bundle 'jistr/vim-nerdtree-tabs'
cd ~/Copy/TreeHouse
let g:NERDTreeHighlightCursorline=1     " Destaca a linha atual
let g:NERDTreeMinimalUI=1
let g:NERDTreeIgnore=['\.pyc', '\~$', '\.swo$', '\.swp$', '\.git', '\.hg', '\.svn', '\.bzr']
let g:NERDTreeWinPos = "right"
" nnoremap <F2>  :NERDTreeToggle<CR>


" Peepopen: ====================================================================
" http://topfunky.github.io/PeepOpen/   to download the app PeepOpen.dmg
Bundle 'shemerey/vim-peepopen'
let p:peepopen_quit = 1
" map <unique> <silent> <Leader>p <Plug>PeepOpen


" LeaderKey: ===================================================================
let mapleader=","


" Remapear: ====================================================================
imap jj <Esc>
nmap <space> :
" edit the vimrc file
nmap <leader>mm :e $MYVIMRC<CR>
nmap <leader>ss :so $MYVIMRC<CR>


" Navegar: ====================================================================
" entre Buffers
nnoremap <silent> <S-Right> :bn<CR>
nnoremap <silent> <S-Left> :bp<CR>
nnoremap <silent> <C-x> :q<CR>
" Entre Janlas
nmap <C-h> <C-w>h
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-l> <C-w>l
" Entre tabs
"nnoremap <silent> <S-Right> :tabn<CR>
"nnoremap <silent> <S-Left> :tabp<CR>
"nnoremap <silent> <C-x> :tabclose<CR>


" Bubble Text: =================================================================
"http://vimcasts.org/episodes/bubbling-text/
"Bubble single lines
nmap <C-Up> ddkP
nmap <C-Down> ddp
"Bubble multiple lines
vmap <C-Up> xkP`[V`]
vmap <C-Down> xp`[V`]

" Fast Saving: ================================================================
nnoremap <leader>w :w!<cr>


" Show Battery Usage: =========================================================
nnoremap <leader>bb :!pmset -g batt<CR>

" Teclas de Funcoes: ==========================================================
nnoremap <F2>  :NERDTreeToggle<CR>
" execute php-cs-fixer
nnoremap <F3> :!php-cs-fixer fix % --level=all<CR>
" execute php
nnoremap <F4> :! php %<CR>
"manual do php
map <F7> :call BrowseDoc()<CR>
" Livrar distracoes
nnoremap <F12> :Goyo<CR>
map <F1> <Plug>PeepOpen
nnoremap <F8> mzgg=G`z<CR>

" map <unique> <silent> <Leader>p <Plug>PeepOpen
" Disable Arrow Keys: ==========================================================
" as mensagem foram movidas pro lado
" nnoremap <Down>     :echoe ""<CR> " Use j
" nnoremap <Right>    :echoe ""<CR> " Use l
" nnoremap <Up>       :echoe ""<CR> " Use k
" nnoremap <Down>     :echoe ""<CR> " Use j

" Lorem Ipsum: =================================================================
" Helpeful abbreviations
iab lorem Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
iab llorem Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.


" Abre O Buffer No Safari: =====================================================
abbrev saf :! open -a safari.app %:p<cr>
