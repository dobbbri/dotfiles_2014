
 "========================================================================="
 "                                                                         "
 "      /$$$$$$  /$$       /$$$$$$$            /$$                 /$$     "
 "     /$$__  $$| $$      | $$__  $$          | $$                |__/     "
 "    | $$  \__/| $$      | $$  \ $$  /$$$$$$ | $$$$$$$   /$$$$$$  /$$     "
 "    |  $$$$$$ | $$      | $$  | $$ /$$__  $$| $$__  $$ /$$__  $$| $$     "
 "     \____  $$| $$      | $$  | $$| $$  \ $$| $$  \ $$| $$  \__/| $$     "
 "     /$$  \ $$| $$      | $$  | $$| $$  | $$| $$  | $$| $$      | $$     "
 "    |  $$$$$$/| $$$$$$$$| $$$$$$$/|  $$$$$$/| $$$$$$$/| $$      | $$     "
 "     \______/ |________/|_______/  \______/ |_______/ |__/      |__/     "
 "                                                                         "
 "====================================================== Sergio Luiz Dobri "


set nocompatible               " be iMproved
filetype off                   " required!
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()


" Let Vundle Manage Vundle: ====================================================
" required!
Bundle 'gmarik/vundle'


" Config: ======================================================================
filetype plugin indent on       " required!
syntax on                       " Syntax highlighting


" Colorscheme: =================================================================
set background=dark
set t_Co=256                    " Allow the use of 256 colors in the terminal
    colorscheme molokai

if has('gui_running')
    let g:rehash256=0
else
    let g:rehash256=1
endif

" Trailing Space: ==============================================================
" Remove trailing spaces when saving a file
exec "set listchars=tab:\uBB\uBB,trail:\uB7,nbsp:~"
set list


" Buffers: =====================================================================
" Navegador para os buffers abertos
set autowrite                   " Save buffer automatically when changing files
set hidden                      " Allow buffer switching without saving
set autoread                    " reload buffer when external changes detected


" Mouse: =======================================================================
set mouse=a                     " Automatically enable mouse usage
set mousehide                   " Hide the mouse cursor while typing


" Encoding: ====================================================================
set fileencoding=utf-8
set encoding=utf-8
scriptencoding utf-8


" Pesquisa: ====================================================================
set incsearch                   " Find as you type search
set hlsearch                    " Highlight search terms
set ignorecase                  " Case insensitive search
set smartcase                   " Case sensitive when uc present
set showmatch                   " Show matching brackets/parenthesis
set gdefault                    " subtitui o g no substitruir


" Menu Autocompletar: ==========================================================
set wildmenu                    " Show list instead of just completing
set wildmode=full               " Command <Tab> completion, list matches
set whichwrap=b,s,h,l,<,>,[,]   " Backspace and cursor keys wrap too


" Gui: =========================================================================
set guioptions=aAc              " aA = autoselect  c = console dialogs
set guioptions-=Beb
set guioptions-=TM              " Remove the toolbar e menju
set guioptions-=LrlR             " Remove scrollbars
set laststatus=2                " always show status line
set guifont=Menlo:h15
set winminheight=0              " Windows can be 0 line high
set linespace=0                 " No extra spaces between rows
set number                      " Line numbers on:
" set relativenumber
set scrolljump=5                " Lines to scroll when cursor leaves screen
set scrolloff=3                 " Minimum lines to keep above and below cursor
set viewoptions=folds,options,cursor,unix,slash " Better Unix/Windows compatib.
set title                       " change the terminal's title
set cursorline                  " hi cursor line
set icon                        " change the title to include the current file
set showtabline=1               " 1=exibe qdo tiver +d 1 tab, 2=sempre exibe
" set lines=45
" set columns=246
set showcmd                     " show command in botton rigth of the screen
set noshowmode
set nocursorcolumn
set nocursorline
set modeline                    " " always show file name

" Diversos: ====================================================================
set shortmess+=filmnrxoOtT      " Abbrev. of messages (avoids 'hit enter')
set virtualedit=onemore         " Allow for cursor beyond last character
set history=50                  " Store a ton of history (default is 20)
set backspace=indent,eol,start
set clipboard=autoselect
set confirm                     " If unsaved changes, ask if you want to save
set timeoutlen=500              " reduce a slag after type leader key + command
set nospell                     " no Spell checking on
set nowrap                      " Do not wrap long lines
set nofoldenable                " No Auto fold code
set noerrorbells                " don't beep
set list listchars=tab:→\ ,trail:·  " Show tabs and trailing spaceis
set whichwrap+=<,>,h,l,[,]      " Automatically wrap left and right
set scrolloff=3
" Speed up vim
set lazyredraw
set synmaxcol=200


" Identacao: ===================================================================
set autoindent                  " Indent at the same level of the previous line
set nojoinspaces                " Prevents inserting twospaces afterpunctuation
set splitright                  " Puts new vsplit windows to the right
" set splitbelow                  " Puts new split windows to the bottom
set smartindent


" Tabulacao: ===================================================================
set shiftwidth=4                " Use indents of 4 spaces
set tabpagemax=15               " Only show 15 tabs
set tabstop=4                   " An indentation every four columns
set softtabstop=4               " Let backspace delete indent
set expandtab                   " Tabs are spaces, not tabs
set shiftround                  "round > and < to multiples of shiftwidth


" Session Settings: ============================================================
set sessionoptions=resize,winpos,winsize,buffers,tabpages,folds,curdir,help


" Swap E Backup: ===============================================================
set noswapfile                  " Stop vim from creating automatic backups
set nobackup                    " Stop backup
set nowb


" LeaderKey: ===================================================================
let mapleader=","


" changer cursor type and color ================================================
au InsertLeave * hi Cursor guibg=#afd700  guifg=#ffffff
au InsertEnter * hi Cursor guibg=#ffffff guifg=#000000
au VimEnter    * hi Cursor guibg=#afd700  guifg=#ffffff


" Abre O Buffer No Safari: =====================================================
abbrev saf :! open -a safari.app %:p<cr>


" Remapear: ====================================================================
imap jj <Esc>
nmap <space> :
" execute php
nnoremap <Leader>p :! php %<CR>
" edit the vimrc file
nmap <leader>mm :e $MYVIMRC<CR>
nmap <leader>ss :so $MYVIMRC<CR>

nnoremap <silent> <S-Right> :bn<CR>
nnoremap <silent> <S-Left> :bp<CR>


" Disable Arrow Keys: ==========================================================
" as mensagem foram movidas pro lado
nnoremap <Down>     :echoe ""<CR> " Use j
nnoremap <Right>    :echoe ""<CR> " Use l
nnoremap <Up>       :echoe ""<CR> " Use k
nnoremap <Down>     :echoe ""<CR> " Use j

" Remapear Abas: ===============================================================
nnoremap <leader>tn :tabnew<CR>
nnoremap <leader>tc :tabclose<CR>
nnoremap <leader>te :tabedit


" Bubble Text: =================================================================
"http://vimcasts.org/episodes/bubbling-text/
"Bubble single lines
nmap <C-Up> ddkP
nmap <C-Down> ddp
"Bubble multiple lines
vmap <C-Up> xkP`[V`]
vmap <C-Down> xp`[V`]

" Source The Vimrc File After Saving It: =======================================
" no terminal digite: export MYVIMRC="/Users/sldobri/.vim/vimrc"
if has("autocmd")
  autocmd bufwritepost vimrc source $MYVIMRC
endif


" Nerdcommenter: ===============================================================
Bundle 'scrooloose/nerdcommenter'
" [count]<leader>ci - Toggles the comment state of the selected line(s) individually.
" [count]<leader>cy- Same as cc except that the commented line(s) are yanked first.
" <leader>c$ - Comments the current line from the cursor to the end of line.
" <leader>cA - Adds comment delimiters to the end of line and goes into insert mode between them


" Php: =========================================================================
Bundle 'donnut/vim-php54-syntax'
let g:php_sql_query=1             " to highlight SQL syntax in strings
let g:php_htmlInStrings=1         " to highlight HTML in string
let g:php_noShortTags = 1         " to disable short tags
let g:DisableAutoPHPFolding=1     " disable PIV's folding

" Lightline: ==================================================================
Bundle 'itchyny/lightline.vim'
let g:lightline.separator = { 'left': '▶', 'right': '◀' }
let g:lightline.subseparator = { 'left': '▶', 'right': '◀' }


" HTML5: =======================================================================
Bundle 'othree/html5.vim'


" CSS3: ========================================================================
Bundle 'hail2u/vim-css3-syntax'


" Autoclose: ===================================================================
Bundle 'Townk/vim-autoclose'


" Git: =========================================================================
Bundle 'tpope/vim-fugitive'
" Mostrando adições, remoções e alterações do Git
Bundle 'airblade/vim-gitgutter'


" Easy Motions Yeah: ===========================================================
Bundle 'Lokaltog/vim-easymotion'


" IdentLine: ===================================================================
" display the indention levels with thin vertical lines
Bundle 'Yggdroot/indentLine'
let g:indentLine_color_term = 239
let g:indentLine_color_gui='#778899'
let g:indentLine_char='│'
let g:indentLine_indentLevel=7


" Php Cs_fixer: ================================================================
nnoremap <leader>ff :!php-cs-fixer fix % --level=all<CR>

" Vim Phpqa: ===================================================================
Bundle 'joonty/vim-phpqa.git'
" <Leader>qa  - Show/hide code sniffer and mess detector violations
" <Leader>qc  - Show/hide code coverage markers
let g:phpqa_messdetector_autorun = 1
let g:phpqa_codesniffer_autorun = 1
let g:phpqa_open_loc = 1
let g:phpqa_codesniffer_args = "--standard=PSR2"
let g:phpqa_php_cmd='/Applications/MAMP/bin/php/php5.4.19/bin/php'
let g:phpqa_codesniffer_cmd='/Applications/MAMP/bin/phpcs'
let g:phpqa_messdetector_cmd='/Applications/MAMP/bin/phpmd'

" Emmet: =======================================================================
Bundle 'mattn/emmet-vim'
let g:user_emmet_mode='a'    "enable all function in all mode.
let g:user_emmet_expandabbr_key='<c-e>'
let g:user_emmet_complete_tag=1
let g:user_emmet_next_key='<c-n>'
let g:user_emmet_prev_key='<c-p>'

" PhpComplete: =================================================================
Bundle 'shawncplus/phpcomplete.vim'
autocmd  FileType  php setlocal omnifunc=phpcomplete#CompletePHP


" Neocomplcache: ===============================================================
Bundle 'Shougo/neocomplcache.vim'
let g:neocomplcache_enable_at_startup = 1
let g:neocomplcache_enable_smart_case = 1
let g:neocomplcache_min_syntax_length = 3
let g:neocomplcache_lock_buffer_name_pattern = '\*ku\*'
noremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"


" Neosnippet: ==================================================================
Bundle 'Shougo/neosnippet'
let g:neosnippet#enable_snipmate_compatibility = 1
let g:neosnippet#snippets_directory='~/.vim/bundle/vim-snippets/snippets'
imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
            \ "\<Plug>(neosnippet_expand_or_jump)"
            \: pumvisible() ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
            \ "\<Plug>(neosnippet_expand_or_jump)"
            \: "\<TAB>"


" Snipmate: ====================================================================
Bundle "MarcWeber/vim-addon-mw-utils"
Bundle "tomtom/tlib_vim"
Bundle "garbas/vim-snipmate"
Bundle "honza/vim-snippets"


" HexHilight: ==================================================================
Bundle 'vim-scripts/hexHighlight.vim'
" <Leader><F2> to ativate and desativate


" Calendar: ===================================================================
" Exibe 3 calendarios contendo o mes anterior, mes atual e o proximo mes
Bundle 'mattn/calendar-vim'
let g:calendar_navi_label = '<Ant.,Hoje,Pro.>'
let g:calendar_mruler = 'Jan,Fev,Mar,Abr,Mai,Jun,Jul,Ago,Set,Out,Nov,Dez'
let g:calendar_wruler = 'Do Se Te Qa Qi Se Sa'
nmap <Leader>c :Calendar<CR>


" VimTableMode: ===============================================================
Bundle 'dhruvasagar/vim-table-mode'


" VDebug: =====================================================================
" Php Debug
Bundle 'joonty/vdebug'


" Markdown: ===================================================================
Bundle 'plasticboy/vim-markdown'
let g:vim_markdown_folding_disabled=1


" Utl: ========================================================================
" Univeral Text Linking - Execute URLs, footnotes, open emails, organize ideas
Bundle 'vim-scripts/utl.vim'


" Map A Change Directory To The Projects: ======================================
nmap <leader>d :cd ~/Desktop/PHP<CR>:e.<CR>


" Lorem Ipsum: =================================================================
" Helpeful abbreviations
iab lorem Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
iab llorem Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.


" Autocomandos: ================================================================
" autoformat
au BufRead,BufWritePre *.html normal gg=G
" au BufRead,BufWritePre *.php normal gg=G
" au BufRead,BufWritePre *.css normal gg=G
" au BufRead,BufWritePre *.js normal gg=G

" Html
au FileType html setlocal tabstop=2 shiftwidth=2 softtabstop=2
" PHP
au FileType php setlocal textwidth=80
" Markdown
au BufNewFile,BufRead *.markdown,*.mdown,*.mkd,*.mkdn,*.md  set filetype=markdown
au BufNewFile,BufRead vimrc  set filetype=vim


" Show Colorcolumn: ===========================================================
" Set colorcolumn to be enabled when it goes over colum 80.
" set colorcolumn=81
"
au FileType php :call matchadd('ColorColumn', '\%81v.*', 100)
au FileType vim :call matchadd('ColorColumn', '\%121v.*', 200)



" Functions: ==================================================================
" Remove empty line at the end of page
function! <SID>TrimEndLines()
  let save_cursor = getpos(".")
  :silent! %s#\($\n\s*\)\+\%$##
  call setpos('.', save_cursor)
endfunction

" Remove trailing spaces
function! <SID>StripTrailingWhitespaces()
  " Preparation: save last search, and cursor position.
  let _s=@/
  let l = line(".")
  let c = col(".")
  " Do the business:
  %s/\s\+$//e
  " Clean up: restore previous search history, and cursor position
  let @/=_s
  call cursor(l, c)
endfunction

" Auto remove when saving
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()
autocmd BufWritePre * :call <SID>TrimEndLines()


" Fast Saving: ================================================================
nmap <leader>w :w!<cr>


" Show Battery Usage: =========================================================
nnoremap <leader>bb :!pmset -g batt<CR>


" Fuzzyfinder: ================================================================
Bundle 'vim-scripts/FuzzyFinder'
Bundle 'vim-scripts/L9'
let g:fuf_modesDisable = []
let g:fuf_mrufile_maxItem = 400
let g:fuf_mrucmd_maxItem = 400
nnoremap <leader>b :FufBuffer<CR>
nnoremap <leader>f :FufFile<CR>
nnoremap <leader>d :FufDir<CR>
nnoremap <leader>m :FufMruFile<CR>
nnoremap <leader>c :FufFileWithFullCwd<CR>
nnoremap <leader>t :FufTagWithCursorWord!<CR>
nnoremap <leader>r :FufRenewCache<CR>


" FocusMode: ==================================================================
" Distraction-free writing in Vim
Bundle 'junegunn/goyo.vim'
let g:goyo_width=84
let g:goyo_margin_top=1
let g:goyo_margin_bottom=1
let g:goyo_linenr=0

function! g:goyo_before()
  if has('gui_running')
    set fullscreen
    set linespace=3
    set nonumber
  endif
endfunction

function! g:goyo_after()
  if has('gui_running')
    set nofullscreen
    set linespace=0
    set number
  endif
endfunction

let g:goyo_callbacks = [function('g:goyo_before'), function('g:goyo_after')]

nnoremap <F1> :Goyo<CR>
